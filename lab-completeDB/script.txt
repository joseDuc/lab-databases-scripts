
   
drop schema if exists hospedaje;
create schema if not exists hospedaje;
use hospedaje;

create table hotel(
id smallint auto_increment,
nombre varchar(50) not null,
telefono varchar(20),
direccion varchar (255),
primary key(id)
);
create table planta( 
id smallint auto_increment,
id_hotel smallint not null,
numero smallint not null,
nombre varchar(20),
primary key(id),
foreign key (id_hotel) references hotel(id)
);
create table estadoHabitacion(
id TINYINT auto_increment,
nombre varchar(20),
primary key(id)
);
create table habitacion(
id smallint auto_increment,
id_hotel smallint not null,
id_planta smallint not null,
numero varchar(10) not null,
id_estadoHabitacion tinyint,
primary key(id),
foreign key (id_hotel) references hotel(id),
foreign key (id_planta) references planta(id),
foreign key (id_estadoHabitacion) references estadoHabitacion(id)
);

create table servicio(
id smallint auto_increment,
nombre varchar(20) not null,
primary key(id)
);
create table cliente(
id int auto_increment,
nombre varchar(100) not null,
telefono varchar(20) not null,
email varchar(50),
primary key(id)
);
create table estadoReserva(
id tinyint auto_increment,
nombre varchar(20) not null,
primary key(id)
);
create table reserva(
id int auto_increment,
id_habitacion smallint not null,
id_cliente int not null,
fecha_reserva datetime default now(),
fecha_inicial datetime,
fecha_final datetime,
id_estadoReserva tinyint,
primary key(id),
foreign key (id_habitacion) references habitacion(id),
foreign key (id_estadoReserva) references estadoReserva(id),
foreign key (id_cliente) references cliente(id)
);
create table estadoServicio(
id tinyint auto_increment,
nombre varchar(20) not null,
primary key(id)
);
create table reserva_servicio(
id int auto_increment,
id_reserva int not null,
id_servicio smallint not null,
id_estadoServicio tinyint,
fecha_inicio datetime,
fecha_realizado datetime,
foreign key (id_reserva) references reserva(id),
foreign key (id_servicio) references servicio(id),
foreign key (id_estadoServicio) references estadoServicio(id),
primary key(id)
);

alter table reserva add fecha_CheckIn datetime;
alter table reserva add fecha_CheckOut datetime;


start transaction;

insert into estadohabitacion (nombre) values
('desocupada'),
('ocupada'),
('deshabilitada');

insert into estadoreserva (nombre) values
('activa'),
('cancelada'),
('consumida');

insert into estadoservicio (nombre) values
('activo'),
('cancelado'),
('realizado');

insert into hotel (nombre) values
('La palma'),
('Majestic');

insert into servicio (nombre) values
('Masaje'),
('Gimnasio'),
('Piscina'),
('Traductor');

insert into cliente (nombre,telefono) values
('José Martínez','931232345'),
('Andrés Marcos','931232345'),
('Joaquín Bellota','931232385'),
('María López','931232396');

insert into planta (id_hotel,numero) values
(1,1),
(1,2),
(1,3),
(2,1),
(2,2);

insert into habitacion (id_hotel,id_planta,numero,id_estadoHabitacion) values
(1,1,'101',1),
(1,2,'201',1),
(1,3,'301',1),
(2,4,'101',1),
(2,5,'102',1);
   
delimiter //
CREATE TRIGGER iniciar_estado_habitacion
AFTER INSERT on reserva
FOR EACH ROW
	BEGIN
		UPDATE Habitacion
       	SET id_estadoHabitacion = 2
     	WHERE id = new.id_habitacion;
    end //
    
delimiter ;
insert into reserva (id_habitacion,id_cliente,id_estadoReserva) values
(1,1,1),
(2,2,1),
(3,4,1),
(4,3,1);



insert into reserva_servicio (id_reserva,id_servicio,id_estadoServicio) values
(1,1,1),
(1,2,1),
(1,1,2),
(3,4,1),
(4,3,1);

    
commit;

rollback;
   

   
     -- ocupacion 
    select h.id, h2.nombre as hotel ,p.numero ,p.nombre as nombre_planta, e.nombre as estado, c.nombre as  huesped,c.telefono 
    from habitacion h 
    join hotel h2 on h2.id =h.id_hotel 
    join planta p on p.id=h.id_planta  
    join estadohabitacion e on e.id =h.id_estadoHabitacion 
    join reserva r on r.id_habitacion= h.id
    join cliente c on c.id =r.id_cliente
    where r.id_estadoReserva =1
   	order by h2.nombre desc ;

      
	   -- actividad servicios
    select c.nombre as huesped , h2.nombre as hotel, h.numero  as núm_habitacion, s.nombre as servicio , e.nombre as estado, rs.fecha_inicio,rs.fecha_realizado 
    from reserva_servicio rs 
    join reserva r on r.id =rs.id_reserva 
    join cliente c on c.id =r.id_cliente 
    join servicio s on s.id =rs.id_servicio 
    join estadoservicio e on e.id =rs.id_estadoServicio 
    join habitacion h on h.id =r.id_habitacion 
    join planta p on p.id =h.id_planta 
    join hotel h2 on h2.id =h.id_hotel 
    order by h2.nombre;
    
    -- total reservas de hotel top 10   en julio (general)
    select h2.nombre ,count(*) as total_reservas
    from reserva r,habitacion h 
    join hotel h2 on h2.id =h.id_hotel 
    where r.id_habitacion=h.id and month(fecha_reserva)=7
   	group by h2.nombre 
  	order by total_reservas desc
  	limit 10;
 
    

